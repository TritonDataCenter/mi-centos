#version=RHEL6
# Install OS instead of upgrade
install

text
poweroff
# Use CDROM installation media
cdrom

# System keyboard
keyboard us
# System language
lang en_US

# Setup network interfaces via DHCP
network --device=eth0 --bootproto=dhcp --onboot=yes

#set root pw here (required by KS), remove pw in post
rootpw temp
firewall --enabled --service=ssh
authconfig --enableshadow --passalgo=sha512
firstboot --disabled

# SELinux configuration
# By default, selinux is enforcing
#selinux --enforcing
selinux --permissive

# Services
services --enabled=ntpd,ntpdate

# Installation logging level
logging --level=info

# System timezone
timezone  Etc/UTC

# Bootloader
bootloader --location=mbr --driveorder=vda --append="tsc=reliable divider=10 console=ttyS0,115200n8 console=tty0"

# Clear the Master Boot Record
zerombr

# Partition clearing information
clearpart --all --initlabel

part / --fstype ext4 --size=8192 --asprimary --ondisk=vda
part swap --fstype swap --size=1024 --asprimary --grow --ondisk=vda

%packages --nobase
@core

acpid
iputils
man
ntp
ntpdate
parted
vim-common
vim-enhanced
vim-minimal
wget

%end

%post --nochroot --log=/mnt/sysimage/var/log/ks.post01.log
#!/bin/bash

# Install sdc-vmtools guest tools
echo "Installing SmartOS VM Guest Tools..."

sdcvmtools="/mnt/source/sdc-vmtools/src/linux"
sysimage="/mnt/sysimage"

cp ./etc/dhcp/dhclient-exit-hooks /etc/dhcp/dhclient-exit-hooks
cp ./etc/dhcp/dhclient-enter-hooks /etc/dhcp/dhclient-enter-hooks
cp -r ${sdcvmtools}/lib/smartdc ${sysimage}/lib/
cp -r ${sdcvmtools}/usr/sbin/mdata-* ${sysimage}/usr/sbin/
cp -r ${sdcvmtools}/usr/share/man/man1/mdata-* ${sysimage}/usr/share/man/man1/
ln -s /usr/sbin/mdata-get ${sysimage}/lib/smartdc/mdata-get
mv ${sysimage}/etc/rc.d/rc.local ${sysimage}/etc/rc.d/rc.local-backup
ln -s /lib/smartdc/joyent_rc.local ${sysimage}/etc/rc.d/rc.local
chmod 755 ${sysimage}/etc/rc.d/rc.local
echo "SmartOS VM Guest Tools installed"

%end

%post --log=/var/log/ks.post02.log
#!/bin/bash

# Remove root password
echo "Removing root password"
passwd -d root

## Build date used for motd and product file
BUILDDATE=`date +%Y%m%d`
NAME="CentOS 6.6"
DOCS="https://docs.joyent.com/images/linux/centos"

# Create MOTD
echo "Creating /etc/motd"
mv /etc/motd /etc/motd-backup
cat << MOTD > /etc/motd
   __        .                   .
 _|  |_      | .-. .  . .-. :--. |-
|_    _|     ;|   ||  |(.-' |  | |
  |__|   \`--'  \`-' \`;-| \`-' '  ' \`-'
                   /  ;  Instance ($NAME $BUILDDATE)
                   \`-'   $DOCS

MOTD

# MOTD symlinks
echo "Creating /etc/motd symlinks"
ln -sf /etc/motd /etc/issue
ln -sf /etc/motd /etc/issue.net

# Create product file
echo "Creating /etc/product file"
cat << PRODUCT > /etc/product
Name: Joyent Instance
Image: $NAME $BUILDDATE
Documentation: $DOCS
Description: $NAME 64-bit image with just essential packages installed. Ideal for users who are comfortable with setting up their own environment and tools.
PRODUCT

# Make sure the eth0 interface is setup correctly for yum
echo "Setting up eth0 (via dhcp) for yum"
cat << ETH0 > /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE="eth0"
ONBOOT="yes"
BOOTPROTO="dhcp"
ETH0

# Make sure eth0 is working correctly
echo "ifdown eth0"
ifdown eth0
echo "ifup eth0"
ifup eth0

# Make sure we have the latest packages
echo "Updating packages"
/usr/bin/yum clean all
/usr/bin/yum update -y

# Clean up all yum caches
echo "Cleaning up yum caches"
/usr/bin/yum clean all

# Clean up network devices
echo "Cleaning up network devices"
/bin/rm -f /etc/udev/rules.d/70-persistent-net.rules
/bin/find /etc/sysconfig/network-scripts -name "ifcfg-eth*" -exec rm -f '{}' +
/bin/find /var/lib/dhclient -type f -exec rm -f '{}' +

# Remove hostname
echo "Clearing out /etc/hostname"
cat /dev/null > /etc/hostname

# Enable agetty on ttyS0 for `vmadm console` command (IMAGE-363)
cat << TTYS0 > /etc/init/ttyS0.conf
# ttyS0 - agetty
#
# This service maintains a agetty on ttyS0.

stop on runlevel [S016]
start on runlevel [23]

respawn
exec agetty -h -L -w /dev/ttyS0 115200 vt102

TTYS0

# Tune Linux vm.dirty_background_bytes (IMAGE-439)
# The following tuning causes dirty data to begin to be background flushed at
# 100 Mbytes, so that it writes earlier and more often to avoid a large build
# up and improving overall throughput.

echo "Setting vm.dirty_background_bytes"
echo "vm.dirty_background_bytes=100000000" >> /etc/sysctl.conf 

# Disable password auth. SSH logon is via ssh key only. A password is being set
# for root via the image manifest per IMAGE-459.
echo "Disabling password auth in sshd_config"
sed s/PasswordAuthentication\ yes/PasswordAuthentication\ no/ -i /etc/ssh/sshd_config

# Ensure Selinux is set to permissive

echo "Setting Selinux to permissive"
sed s/SELINUX=enforcing/SELINUX=permissive/ -i /etc/selinux/config

%end
